package protobufs;

enum Region {
	NA = 1;
	EU = 2;
	KR = 3;
	CN = 5;
	SEA = 6;
}

message Handshake {
	optional string username = 1;
	optional string auth_key = 2;
}

message Division {
	required int64 id = 1;
	required string name = 2;
	required double promotion_threshold = 3;
	required double demotion_threshold = 4;
	required string icon_url = 5;
	required string small_icon_url = 6;
}

message HandshakeResponse {
	enum HandshakeStatus {
		FAIL = 0;
		SUCCESS = 1;
		ALREADY_LOGGED_IN = 2;
	}
	required HandshakeStatus status = 1;
	optional UserStats user = 2;
	optional int64 id = 3;
	repeated Character character = 4;
	repeated Division division = 5;
	repeated Region active_region = 6;
	optional MapPool map_pool = 7;
	optional int64 max_vetoes = 8;
}

message UserRegionStats
{
	required Region region = 1;
	required int64 points = 2;
	required int64 wins = 3;
	required int64 losses = 4;
	required int64 forfeits = 5;
	required int64 walkovers = 6;
	required double mmr = 7;
	required int64 placements_remaining = 8;
	required int64 division = 9;
	optional int64 division_rank = 10;
}

message UserStats {
	required string username = 1;
	required int64 search_radius = 2;
	required int64 points = 3;
	required int64 wins = 4;
	required int64 losses = 5;
	required int64 forfeits = 6;
	required int64 walkovers = 7;
	repeated UserRegionStats region = 8;
	repeated Map vetoes = 9;
	required int64 id = 10;
	required double mmr = 11;
	required int64 placements_remaining = 12;
	required int64 division = 13;
	required int64 division_rank = 14;
}



message MapPool {
	repeated Map map = 1;
}

message Map {
	required Region region = 1;
	required string battle_net_name = 2;
	required int32 battle_net_id = 3;
	optional string description = 4;
	optional string info_url = 5;
	optional string preview_url = 6;
}

message SimulationResult {
	required UserStats opponent = 1;
	required bool victory = 2;	
	required double match_quality = 3;
}

message MatchmakingQueue {
	repeated Region region = 1;
	required int64 radius = 2;
}

message MatchmakingResult {
	required int64 timespan = 1;
	required double quality = 2;
	required UserStats opponent = 3;
	optional int64 opponent_latency = 4;
	required string channel = 5;
	required string chat_room = 6;
	required Map map = 7;
	required int64 long_unlock_time = 8;
	required int64 long_response_time = 9;
}

message ChatRoomInfo {
	required string key = 1;
	required string name = 2;
	required bool passworded = 3;
	required bool joinable = 4;
	required bool fixed = 5;
	required int64 users = 6;
	repeated UserStats participant = 7;
	required bool forced = 8;
}

message ChatRoomIndex {
	repeated ChatRoomInfo room = 1;
}

message ChatMessage {
	required string sender = 1;
	required string target = 2;
	required string message = 3;
}

message ChatRoomMessage {
	required ChatRoomInfo room = 1;
	required UserStats sender = 2;
	required string message = 3;
	optional int64 timestamp = 4;
}

message ChatPrivateMessage {
	required UserStats sender = 1;
	required string message = 2;
}

message ChatHistoryMessages {
	repeated ChatRoomMessage message = 1;
}

message ChatRoomUser {
	required ChatRoomInfo room = 1;
	required UserStats user = 2;
}

message ChatRoomRequest {
	required string room = 1;
	required string password = 2;
}

message MatchmakingStats {
	required Region region = 1;
	required int64 searching_users = 2;
}

message ServerStats {
	required int64 active_users = 1;
	required int64 searching_users = 2;
	repeated MatchmakingStats region = 3;
}

message Character {
	required Region region = 1;
	required int32 subregion = 2;
	required int32 profile_id = 3;
	required string character_name = 4;
	optional int32 character_code = 5;
	optional string profile_link = 6;
	optional string ingame_profile_link = 7;
	optional bool verified = 8;
	optional int32 verification_portrait = 9;
}

message OAuthRequest {
	required Region region = 1;
}

message OAuthUrl{
	required string url = 1;
}

message MatchParticipant {
	optional UserStats user = 1;
	optional Character character = 2;
	required int64 points_before = 3;
	required int64 points_after = 4;
	required int64 points_difference = 5;
	required bool victory = 6;	
	required string race = 7;
}

message MatchResult {
	required Region region = 1;
	required Map map = 2;
	repeated MatchParticipant participant = 3;
}

message BroadcastAlert {
	required string message = 2;
	required int32 predefined = 1;
}
